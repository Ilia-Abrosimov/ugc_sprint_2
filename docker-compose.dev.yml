version: '3.8'

services:
  # Kafka
  kafka-zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: kafka-zookeeper
    ports:
      - "2181:2181"
    profiles:
      - oltp
      - etl

  kafka1:
    platform: linux/amd64
    image: confluentinc/cp-kafka:6.0.1
    container_name: kafka1
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka1:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: kafka-zookeeper:2181
      KAFKA_CREATE_TOPICS: "views:1:1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - kafka-zookeeper
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    profiles:
      - oltp
      - etl

  kafka-test:
    platform: linux/amd64
    image: confluentinc/cp-kafka:6.0.1
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-test:9093
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: kafka-zookeeper:2181
      KAFKA_CREATE_TOPICS: "views:1:1"
    depends_on:
      - kafka-zookeeper
    profiles:
      - tests

  oltp-service:
    build:
      context: ./services/oltp
    container_name: oltp
    restart: on-failure
    env_file:
      - .env
    ports:
      - "5005:5000"
    depends_on:
      - kafka1
    command: gunicorn --bind 0.0.0.0:5000 wsgi_app:app
    profiles:
      - oltp
      - etl

  # ClickHouse
  clickhouse-zookeeper:
    image: zookeeper:3.5
    container_name: clickhouse-zookeeper
    hostname: zookeeper
    profiles:
      - ch
      - olap
      - etl

  clickhouse-node1:
    image: yandex/clickhouse-server
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./services/olap/data/node1:/etc/clickhouse-server
    depends_on:
      - clickhouse-zookeeper
    profiles:
      - ch
      - olap
      - etl

  clickhouse-node2:
    image: yandex/clickhouse-server
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    volumes:
      - ./services/olap/data/node2:/etc/clickhouse-server
    depends_on:
      - clickhouse-zookeeper
    profiles:
      - ch
      - olap
      - etl

  clickhouse-node3:
    image: yandex/clickhouse-server
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    volumes:
      - ./services/olap/data/node3:/etc/clickhouse-server
    depends_on:
      - clickhouse-zookeeper
    profiles:
      - ch
      - olap
      - etl

  clickhouse-node4:
    image: yandex/clickhouse-server
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    volumes:
      - ./services/olap/data/node4:/etc/clickhouse-server
    depends_on:
      - clickhouse-zookeeper
    profiles:
      - ch
      - olap
      - etl

  # ETL
  etl:
    build: ./services/etl
    container_name: etl
    profiles:
      - etl
    env_file:
      - .env
    depends_on:
      kafka1:
        condition: service_healthy

  # OLAP
  olap:
    build: ./services/olap
    container_name: olap
    profiles:
      - olap
      - etl
    env_file:
      - .env
    depends_on:
      - clickhouse-zookeeper
      - clickhouse-node1
      - clickhouse-node2
      - clickhouse-node3
      - clickhouse-node4
      - mongo1
    volumes:
      - ./services/olap/logs:/opt/olap/logs
    command: python3 main.py

  # Mongo
  mongo1:
    container_name: mongo
    image: mongo
    profiles:
      - olap
      - etl
    ports:
      - "27017:27017"
